//
//  WDF_PhotoView.m
//  100Movies_2.0
//
//  Created by qianfeng on 16/1/9.
//  Copyright © 2016年 WDF. All rights reserved.
//

#import "WDF_PhotoView.h"

#import "AFNetworking.h"

#import "WDF_PhotoModel.h"

#import "WDF_PhotoCollectionViewCell.h"

#import "MJRefresh.h"

#import "WDF_WaterFallLayout.h"

#import "MBProgressHUD.h"

#import "UIImageView+WebCache.h"


#import "UIImage+MultiFormat.h"

#import "MBProgressHUD.h"

@interface WDF_PhotoView ()<UICollectionViewDelegate,UICollectionViewDataSource,UICollectionViewDelegateFlowLayout>
{
    NSInteger _count;
    BOOL      _isRefresh; //表示是刷新还是上拉加载 YES:刷新  NO:加载
}
@property(nonatomic,strong) UICollectionView *collection;

@property(nonatomic,strong) NSMutableArray *dataSource;

@property(nonatomic,strong) NSMutableArray *movieID;

@property(nonatomic,strong) UIImage *image;

@end

@implementation WDF_PhotoView

- (instancetype)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        [self addSubview:self.collection];
        [self loadMainData];
    }
    return self;
}

#pragma mark====================解析数据==================

-(void)loadMainData{
    _count=0;
    [self showHUD:@"正在加载数据..." isDim:NO];
    [self reloadData];
}

-(void)reloadData{
    
    AFHTTPSessionManager *manager=[AFHTTPSessionManager manager];
    
    NSDictionary *parameters=@{@"type":@"movie",@"tag":@"高分",@"sort":@"recommend",@"page_limit":@"20",@"page_start":@(_count)};
    
    [manager GET:GaoPoint_path parameters:parameters success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSArray *allData=responseObject[@"subjects"];
        for (NSDictionary *dict in allData) {
            //获取电影的ID
            NSString *ID=dict[@"id"];
            
            [self preasePhoto:ID];
        }
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        NSLog(@"请求ID时候的错误 %@",error);
    }];
}

-(void)preasePhoto:(NSString *)ID{
    
    NSString *path=[NSString stringWithFormat:MOVIE_PHOTOS_PATH,ID];
    
    NSString *url=[DOUBAN_BASE_PATH stringByAppendingString:path];
    
    NSString *pathUrl=[url stringByAppendingString:DOUBAN_APIKEY_BLACK_PRIVATE];
    
    AFHTTPSessionManager *manager=[AFHTTPSessionManager manager];

    [manager GET:pathUrl parameters:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        
        WDF_PhotoModel *model=[[WDF_PhotoModel alloc]initWithDictionary:responseObject error:nil];
        
            model.moviewID=ID;
            
            [self.dataSource addObject:model];
            
            [self doneLoadData];
        
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        NSLog(@"请求model的错误%@",error);
    }];
}

//数据加载完成
-(void)doneLoadData{
    //停止刷新
    [self.collection.header endRefreshing];
    //停止上拉刷新
    [self.collection.footer endRefreshing];
    
    //刷新表格
    [self.collection reloadData];
    
    [self hideHUD];
}

#pragma mark==============collectionView的相关协议============
-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView{
    return 1;
}

-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{

    return self.dataSource.count;
}

-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
   
    
    WDF_PhotoCollectionViewCell *cell=[collectionView dequeueReusableCellWithReuseIdentifier:@"cell" forIndexPath:indexPath];
    
    WDF_PhotoModel *model=self.dataSource[indexPath.row];
    
    cell.model=model;
    
    return cell;
}

-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{

    WDF_PhotoModel *model=self.dataSource[indexPath.row];
    if (self.clickPhoto) {
        self.clickPhoto(model.moviewID);
    }
}

-(CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath{
  

    float width=(SCREEN_WIDTH - 30) / 2;
    
    return CGSizeMake(width,width*8/7);
}
#pragma mark==========刷新集成====================
-(void)addRefreshControl{
    //下啦刷新集成
    MJRefreshNormalHeader *header=[MJRefreshNormalHeader headerWithRefreshingBlock:^{
        
        _isRefresh=YES;
        //刷新之前重置page
        _count=0;
        //重新加载数据
        [self.collection reloadData];
        
    }];
    
    // 添加到tableView
    self.collection.header=header;
    
    //上拉刷新加载集成
    MJRefreshAutoNormalFooter *footer=[MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{
        _count+=20;
        _isRefresh=NO;
        [self reloadData];
    }];
    self.collection.footer=footer;
}

-(void)showHUD:(NSString *)title isDim:(BOOL)isDim
{
    self.hud = [MBProgressHUD showHUDAddedTo:self animated:YES];
    self.hud.dimBackground = isDim;
    self.hud.labelText = title;
}

-(void)showHUDComplete:(NSString *)title
{
    self.hud.customView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"37x-Checkmark.png"]];
    self.hud.mode = MBProgressHUDModeCustomView;
    self.hud.labelText = title;
    [self hideHUD];
}

-(void)hideHUD
{
    [self.hud hide:YES afterDelay:0.3];
}



#pragma mark=====================懒加载=================

-(UICollectionView *)collection{
    WDF_WaterFallLayout *waterFallLayout = [[WDF_WaterFallLayout alloc]init];
    waterFallLayout.lineCount = 2;
    waterFallLayout.verticalSpacing = 10;
    waterFallLayout.horizontalSpacing = 10;
    waterFallLayout.sectionInset = UIEdgeInsetsMake(10, 10, 10, 10);
    
    if (!_collection) {
        _collection=[[UICollectionView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, CGRectGetHeight(self.frame)-49) collectionViewLayout:waterFallLayout];
        _collection.delegate=self;
        _collection.dataSource=self;
    
        [self addRefreshControl];
        
        [_collection registerClass:[WDF_PhotoCollectionViewCell class] forCellWithReuseIdentifier:@"cell"];
        
        _collection.backgroundColor=[UIColor blackColor];
        
    }
    return _collection;
}

-(NSMutableArray *)dataSource{
    if (!_dataSource) {
        _dataSource=[[NSMutableArray alloc]init];
    }
    return _dataSource;
}


@end
